specVersion: 0.0.5
schema:
  file: ../common/schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ServiceRegistryL2
    network: arbitrum-one
    source:
      address: "0xE3607b00E75f6405248323A9417ff6b39B244b50"
      abi: ServiceRegistryL2
      startBlock: 174008819
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Service
        - Multisig
        - AgentRegistration
        - DailyUniqueAgents
        - DailyAgentPerformance
        - DailyActiveMultisigs
        - Agent
        - GlobalMetrics
        - ServiceMultisigHistory
        - AgentMultisigHistory
        - ServiceAgentHistory
      abis:
        - name: ServiceRegistryL2
          file: ../../../abis/ServiceRegistryL2.json
      eventHandlers:
        - event: CreateService(indexed uint256,bytes32)
          handler: handleCreateService
        - event: CreateMultisigWithAgents(indexed uint256,indexed address)
          handler: handleCreateMultisig
        - event: RegisterInstance(indexed address,indexed uint256,indexed address,uint256)
          handler: handleRegisterInstance
        - event: TerminateService(indexed uint256)
          handler: handleTerminateService
      file: ../common/mappers/mapping.ts

templates:
  - kind: ethereum/contract
    name: GnosisSafe
    network: arbitrum-one
    source:
      abi: GnosisSafe
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../common/mappers/mapping.ts
      entities:
        - Service
        - Multisig
        - AgentRegistration
        - DailyServiceActivity
        - DailyUniqueAgents
        - DailyAgentPerformance
        - DailyActiveMultisigs
        - Agent
        - GlobalMetrics
        - ServiceMultisigHistory
        - AgentMultisigHistory
        - ServiceAgentHistory
      abis:
        - name: GnosisSafe
          file: ../../../abis/GnosisSafe.json
      eventHandlers:
        - event: ExecutionSuccess(bytes32,uint256)
          handler: handleExecutionSuccess
        - event: ExecutionFromModuleSuccess(indexed address)
          handler: handleExecutionFromModuleSuccess
      